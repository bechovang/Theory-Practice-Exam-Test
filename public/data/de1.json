{
  "examId": "de1_csi",
  "title": "Đề 1 CSI",
  "description": "Đề thi trắc nghiệm bao gồm các chủ đề cốt lõi của Khoa học Máy tính, với giải thích sử dụng định dạng HTML.",
  "questions": [
    {
      "id": 1,
      "question": "According to the von Neumann model, __________ are stored in memory.",
      "image": null,
      "options": [
        "A. Only data",
        "B. Only programs",
        "C. Data and programs",
        "D. Neither data nor programs"
      ],
      "correctAnswer": "C",
      "explanation": "Mô hình Von Neumann, nền tảng của kiến trúc máy tính hiện đại, quy định rằng <b>cả chương trình và dữ liệu đều được lưu trữ trong bộ nhớ</b>. Điều này hoàn toàn khác biệt so với các máy tính tiền thân, nơi chỉ dữ liệu được lưu trữ trong bộ nhớ, còn chương trình được thực hiện thông qua việc điều khiển các công tắc hoặc thay đổi hệ thống dây điện.",
      "difficulty": "easy",
      "topic": "Computer Architecture",
      "hints": [
        "Câu thần chú: von Neumann = Chương trình + Dữ liệu trong cùng bộ nhớ.",
        "Ghi nhớ khái niệm 'stored-program concept'.",
        "Tưởng tượng bộ nhớ là một cuốn sổ, bạn viết cả công thức (chương trình) và nguyên liệu (dữ liệu) vào đó."
      ]
    },
    {
      "id": 2,
      "question": "What generation introduced high-level programming languages?",
      "image": null,
      "options": [
        "A. First generation",
        "B. Second generation",
        "C. Third generation",
        "D. Fourth generation"
      ],
      "correctAnswer": "B",
      "explanation": "Máy tính thế hệ thứ hai (khoảng năm 1959-1965) đã chứng kiến sự ra đời của các ngôn ngữ lập trình cấp cao như <b>FORTRAN và COBOL</b>, giúp việc lập trình trở nên dễ dàng hơn.",
      "difficulty": "easy",
      "topic": "History of Computing",
      "hints": [
        "Thần chú: Thế hệ 2 = Transistor + Ngôn ngữ bậc cao (FORTRAN, COBOL).",
        "Ngôn ngữ bậc cao ra đời để thay thế cho việc lập trình bằng mã máy cực khổ của thế hệ 1.",
        "Liên kết sự ra đời của bóng bán dẫn (gen 2) với sự ra đời của ngôn ngữ lập trình bậc cao."
      ]
    },
    {
      "id": 3,
      "question": "In the fetch phase, the control unit orders the system to copy the next instruction into the __________ in the CPU.",
      "image": null,
      "options": [
        "A. Program counter",
        "B. Instruction register",
        "C. Memory",
        "D. Register"
      ],
      "correctAnswer": "B",
      "explanation": "Trong giai đoạn <b>Fetch</b> (nạp lệnh) của chu trình thực thi lệnh của CPU, CPU sẽ lấy thông tin từ bộ nhớ và lưu trữ nó vào <b>thanh ghi lệnh (Instruction Register - IR)</b>. Thanh ghi lệnh là một bộ nhớ nhanh tạm thời quan trọng trong CPU.",
      "difficulty": "medium",
      "topic": "CPU Architecture",
      "hints": [
        "Program Counter (PC) chỉ giữ ĐỊA CHỈ, không giữ lệnh.",
        "Instruction Register (IR) là nơi NẮM GIỮ lệnh đang được xử lý.",
        "Tưởng tượng: PC chỉ đường, IR là nơi lệnh 'ngồi chờ' để được giải mã và thực thi."
      ]
    },
    {
      "id": 4,
      "question": "A __________ is a storage device that can undergo multiple writes and erasures.",
      "image": null,
      "options": [
        "A. CD-ROM",
        "B. CD-R",
        "C. CD-RW",
        "D. CD-RR"
      ],
      "correctAnswer": "C",
      "explanation": "<b>CD-RW (Compact Disc-ReWritable)</b> là loại đĩa quang cho phép ghi, đọc và xóa dữ liệu nhiều lần, trong khi CD-ROM (Read-Only Memory) chỉ đọc, và CD-R (Recordable) chỉ ghi một lần.",
      "difficulty": "easy",
      "topic": "Storage Devices",
      "hints": [
        "Thần chú: RW = ReWritable = Ghi Lại Được.",
        "ROM = Read-Only (Chỉ Đọc).",
        "R = Recordable (Ghi 1 lần)."
      ]
    },
    {
      "id": 5,
      "question": "What is the name of the display feature that highlights areas of the screen which require operator attention?",
      "image": null,
      "options": [
        "A. Pixel",
        "B. Reverse video",
        "C. Touch screen",
        "D. Cursor"
      ],
      "correctAnswer": "B",
      "explanation": "Trong lĩnh vực máy tính, <b>'reverse video'</b> là một kỹ thuật hiển thị dùng để đảo ngược màu nền và màu chữ của một vùng văn bản, thường được sử dụng để làm nổi bật hoặc chỉ ra một khu vực cần sự chú ý của người dùng.",
      "difficulty": "medium",
      "topic": "User Interface",
      "hints": [
        "Reverse Video = Đảo màu nền và chữ để làm NỔI BẬT.",
        "Hãy nghĩ đến việc bạn bôi đen một đoạn văn bản trong Word, màu sắc của nó bị đảo ngược.",
        "Pixel là điểm ảnh, Cursor là con trỏ, chúng không phải là tính năng làm nổi bật cả một khu vực."
      ]
    },
    {
      "id": 6,
      "question": "What is the taxonomy of computer organization?",
      "image": null,
      "options": [
        "A. SIMD - Single Instruction-stream, Multiple Data-stream",
        "B. MISD - Multiple Instruction-stream, Single Data-stream",
        "C. MIMD - Multiple Instruction-stream, Multiple Data-stream",
        "D. All of the others"
      ],
      "correctAnswer": "D",
      "explanation": "Các kiến trúc xử lý song song, một phần của tổ chức máy tính, bao gồm <b>SISD, SIMD, và MIMD</b>. Mặc dù <b>MISD</b> không phổ biến, nó vẫn là một phần của Phân loại Flynn (Flynn's Taxonomy). Do đó, tất cả các tùy chọn đều đại diện cho các phân loại tổ chức máy tính.",
      "difficulty": "medium",
      "topic": "Computer Architecture",
      "hints": [
        "Ghi nhớ Phân loại Flynn bao gồm 4 loại: SISD, SIMD, MISD, MIMD.",
        "S = Single, M = Multiple, I = Instruction, D = Data.",
        "Câu hỏi hỏi về 'taxonomy' (hệ thống phân loại), nên tất cả các thành phần của hệ thống đó đều là câu trả lời đúng."
      ]
    },
    {
      "id": 7,
      "question": "Which is a unit representing the number of bits of discrete data?",
      "image": null,
      "options": [
        "A. Baud",
        "B. Byte",
        "C. Bit"
      ],
      "correctAnswer": "C",
      "explanation": "Trong máy tính, <b>bit (binary digit)</b> là đơn vị dữ liệu nhỏ nhất có thể được lưu trữ, biểu thị bằng ký tự 0 hoặc 1.",
      "difficulty": "easy",
      "topic": "Data Representation",
      "hints": [
        "Câu thần chú: Bit = Binary Digit, là đơn vị nhỏ nhất (0 hoặc 1).",
        "Byte là một nhóm gồm 8 bits.",
        "Đừng nhầm lẫn 'bit' (đơn vị dữ liệu) với 'baud' (tốc độ tín hiệu)."
      ]
    },
    {
      "id": 8,
      "question": "Binary numbers need more places for counting because:",
      "image": null,
      "options": [
        "A. 0's and 1's can be added in front of them",
        "B. 0's and 1's have to be properly placed",
        "C. They are always big numbers",
        "D. Binary base is small"
      ],
      "correctAnswer": "D",
      "explanation": "Hệ nhị phân sử dụng cơ số <b>b = 2</b>, chỉ có hai ký tự (0 và 1). So với hệ thập phân (cơ số 10), việc sử dụng một cơ số nhỏ hơn đòi hỏi <b>nhiều chữ số hơn</b> để biểu diễn cùng một giá trị.",
      "difficulty": "medium",
      "topic": "Number Systems",
      "hints": [
        "Cơ số càng nhỏ, số càng dài.",
        "So sánh hệ Nhị phân (cơ số 2) và Thập phân (cơ số 10).",
        "Ví dụ: 10 trong hệ thập phân là 1010 trong hệ nhị phân."
      ]
    },
    {
      "id": 9,
      "question": "Convert the fraction decimal number 0.625 to binary:",
      "image": null,
      "options": [
        "A. 1.010",
        "B. 0.101",
        "C. 1.110",
        "D. 0.110"
      ],
      "correctAnswer": "B",
      "explanation": "Để chuyển đổi phần thập phân của một số từ hệ thập phân sang hệ nhị phân, ta thực hiện phép nhân liên tiếp phần thập phân với cơ số 2 và lấy phần nguyên của kết quả:<br>- 0.625 × 2 = <b>1</b>.25 (lấy <b>1</b>)<br>- 0.25 × 2 = <b>0</b>.5 (lấy <b>0</b>)<br>- 0.5 × 2 = <b>1</b>.0 (lấy <b>1</b>)<br>Đọc các phần nguyên từ trên xuống dưới, ta được kết quả là <b>0.101</b>.",
      "difficulty": "medium",
      "topic": "Number Systems",
      "hints": [
        "Thần chú chuyển phần thập phân: Nhân liên tục với 2, lấy phần nguyên.",
        "Quan trọng: Đọc kết quả (các phần nguyên) từ trên xuống dưới.",
        "Số ban đầu nhỏ hơn 1, nên kết quả nhị phân phải bắt đầu bằng '0.'."
      ]
    },
    {
      "id": 10,
      "question": "A group of bits in the binary system are represented as one digit in the octal system. How many bits?",
      "image": null,
      "options": [
        "A. 1",
        "B. 2",
        "C. 3",
        "D. 4"
      ],
      "correctAnswer": "C",
      "explanation": "Để chuyển đổi một số nhị phân sang hệ bát phân, ta nhóm các bit thành từng nhóm <b>3 bit</b> và chuyển đổi từng nhóm thành một chữ số bát phân tương ứng, vì 2³ = 8.",
      "difficulty": "easy",
      "topic": "Number Systems",
      "hints": [
        "Thần chú: Octal = 8 = 2³ -> Cần 3 bits.",
        "Tương tự: Hexadecimal = 16 = 2⁴ -> Cần 4 bits.",
        "Để chuyển đổi, bạn luôn nhóm 3 bit lại với nhau."
      ]
    },
    {
      "id": 11,
      "question": "Conversion of the binary number 1010101000010111 to hexadecimal is:",
      "image": null,
      "options": [
        "A. D8F9",
        "B. A8B9",
        "C. AA17",
        "D. D9F8"
      ],
      "correctAnswer": "C",
      "explanation": "Để chuyển đổi một số nhị phân sang hệ thập lục phân, ta nhóm các bit thành từng nhóm <b>4 bit</b> từ phải sang trái và chuyển đổi từng nhóm thành một chữ số thập lục phân tương ứng:<br><b>1010 | 1010 | 0001 | 0111</b><br> A    |    A   |    1   |    7<br>Kết quả là <b>AA17</b>.",
      "difficulty": "easy",
      "topic": "Number Systems",
      "hints": [
        "Thần chú: Hex = 16 = 2⁴ -> Nhóm 4 bits.",
        "Bắt đầu nhóm từ bên phải sang trái.",
        "Ghi nhớ: A=10, B=11, C=12, D=13, E=14, F=15."
      ]
    },
    {
      "id": 12,
      "question": "Assume a new Excess system uses 17 bits to represent the exponent section. What is the bias value in this system?",
      "image": null,
      "options": [
        "A. 17",
        "B. 16",
        "C. 65535",
        "D. 65536"
      ],
      "correctAnswer": "C",
      "explanation": "Trong hệ thống Excess (Biased Exponent System), giá trị <b>bias</b> được tính bằng công thức <b>2^(m-1) - 1</b>, trong đó 'm' là số bit được cấp phát cho phần số mũ. Với 17 bit, bias sẽ là:<br>2^(17-1) - 1 = 2^16 - 1 = 65536 - 1 = <b>65535</b>.",
      "difficulty": "medium",
      "topic": "Data Representation",
      "hints": [
        "Công thức cốt lõi: Bias = 2^(số bit mũ - 1) - 1.",
        "Đừng nhầm lẫn! Phải lấy 2 lũy thừa (m-1) trước, sau đó mới trừ 1.",
        "Ví dụ: IEEE 754 single-precision dùng 8 bit mũ, nên bias = 2^(8-1) - 1 = 127."
      ]
    },
    {
      "id": 13,
      "question": "The 32-bit code called __________ represents symbols in all languages.",
      "image": null,
      "options": [
        "A. ANSI",
        "B. Unicode",
        "C. EBCDIC",
        "D. Extended ASCII"
      ],
      "correctAnswer": "B",
      "explanation": "<b>Unicode</b> là một tiêu chuẩn mã hóa ký tự sử dụng <b>32 bit để biểu diễn 2^32 ký tự</b>, bao gồm cả các ký hiệu đồ họa và ký tự đặc biệt, làm cho nó phù hợp cho việc giao tiếp bằng nhiều ngôn ngữ khác nhau. ASCII và ASCII mở rộng là một phần của Unicode.",
      "difficulty": "easy",
      "topic": "Data Representation",
      "hints": [
        "Thần chú: Unicode = Universal = Tất cả ngôn ngữ.",
        "ASCII chỉ đủ cho tiếng Anh. Unicode là giải pháp toàn cầu.",
        "Từ khóa '32-bit' và 'all languages' gần như chắc chắn chỉ đến Unicode."
      ]
    },
    {
      "id": 14,
      "question": "In storing audio, how many samples per second are good enough to reproduce an audio signal?",
      "image": null,
      "options": [
        "A. 10,000",
        "B. 20,000",
        "C. 30,000",
        "D. 40,000"
      ],
      "correctAnswer": "D",
      "explanation": "Khi lưu trữ âm thanh, việc lấy mẫu (sampling) được thực hiện để ghi lại một số giá trị của tín hiệu tương tự. Theo định lý Nyquist, tần số lấy mẫu phải lớn hơn gấp đôi tần số cao nhất của tín hiệu. Tai người nghe được đến khoảng 20,000 Hz, do đó cần lấy mẫu với tần số lớn hơn 40,000 mẫu/giây. Tiêu chuẩn CD âm thanh là 44,100 mẫu/giây, vì vậy <b>40,000</b> là một con số phù hợp.",
      "difficulty": "medium",
      "topic": "Data Representation",
      "hints": [
        "Thần chú: Tần số lấy mẫu > 2 * Tần số cao nhất (Định lý Nyquist).",
        "Tai người nghe được đến ~20,000 Hz. Vậy cần lấy mẫu > 40,000 Hz.",
        "Hãy nhớ đến chất lượng CD là 44.1 kHz, gần với con số 40,000."
      ]
    },
    {
      "id": 15,
      "question": "The scanning rate in image processing is called [___]. If the resolution is sufficiently high, the human eye cannot recognize the discontinuity in reproduced images.",
      "image": null,
      "options": [
        "A. Bit map",
        "B. Pixels",
        "C. Resolution",
        "D. Color depth"
      ],
      "correctAnswer": "C",
      "explanation": "Trong xử lý hình ảnh, tốc độ quét (the scanning rate) hình ảnh được gọi là <b>độ phân giải (resolution)</b>. Độ phân giải quyết định số lượng pixel được ghi lại cho mỗi inch vuông hoặc inch tuyến tính, ảnh hưởng đến độ rõ nét của hình ảnh.",
      "difficulty": "easy",
      "topic": "Data Representation",
      "hints": [
        "Thần chú: Resolution = Mật độ điểm ảnh. Độ phân giải càng cao, ảnh càng nét.",
        "Hãy liên kết 'scanning rate' với 'mật độ điểm ảnh', và thuật ngữ tương ứng là Resolution.",
        "Pixel là 'viên gạch', Resolution là 'mật độ xây gạch'."
      ]
    },
    {
      "id": 16,
      "question": "Use a simple right shift operation on the bit pattern 1001 1000.",
      "image": null,
      "options": [
        "A. 1001 1001",
        "B. 1001 1000",
        "C. 0100 1101",
        "D. 0100 1100"
      ],
      "correctAnswer": "D",
      "explanation": "Phép toán <b>dịch phải đơn giản</b> di chuyển mỗi bit một vị trí sang bên phải. Bit ngoài cùng bên phải sẽ bị mất, và một bit 0 sẽ được chèn vào vị trí ngoài cùng bên trái.<br>Mẫu bit ban đầu: <b>1</b>001 100<b>0</b><br>Sau khi dịch phải: <b>0</b>100 110<b>0</b>",
      "difficulty": "easy",
      "topic": "Bitwise Operations",
      "hints": [
        "Dịch phải: Bit phải nhất MẤT, bit trái nhất THÊM 0.",
        "Tưởng tượng các bit như một hàng người, tất cả cùng bước sang phải một bước.",
        "Dịch phải 1 bit về cơ bản là phép chia số nguyên cho 2."
      ]
    },
    {
      "id": 17,
      "question": "Use a simple left shift operation on the bit pattern 1001 1000.",
      "image": null,
      "options": [
        "A. 0001 1001",
        "B. 0001 1010",
        "C. 0011 0000",
        "D. 0011 0001"
      ],
      "correctAnswer": "C",
      "explanation": "Phép toán <b>dịch trái đơn giản</b> di chuyển mỗi bit một vị trí sang bên trái. Bit ngoài cùng bên trái sẽ bị mất, và một bit 0 sẽ được chèn vào vị trí ngoài cùng bên phải.<br>Mẫu bit ban đầu: <b>1</b>001 100<b>0</b><br>Sau khi dịch trái: 0011 000<b>0</b>",
      "difficulty": "easy",
      "topic": "Bitwise Operations",
      "hints": [
        "Dịch trái: Bit trái nhất MẤT, bit phải nhất THÊM 0.",
        "Tưởng tượng các bit như một hàng người, tất cả cùng bước sang trái một bước.",
        "Dịch trái 1 bit về cơ bản là phép nhân số nguyên cho 2."
      ]
    },
    {
      "id": 18,
      "question": "A hybrid computer uses a [___] to convert digital signals from a computer into analog signals.",
      "image": null,
      "options": [
        "A. Modulator",
        "B. Demodulator",
        "C. Modem",
        "D. Decoder"
      ],
      "correctAnswer": "C",
      "explanation": "<b>Modem</b> (viết tắt của Modulator-Demodulator) là một thiết bị chuyển đổi tín hiệu. Nó thực hiện chức năng điều chế (modulation) để chuyển đổi tín hiệu số từ máy tính thành tín hiệu tương tự để truyền qua đường truyền analog (ví dụ như đường điện thoại) và giải điều chế (demodulation) để chuyển đổi ngược lại.",
      "difficulty": "easy",
      "topic": "Networking",
      "hints": [
        "Thần chú: Modem = MOdulator + DEMoludator.",
        "MOdulator: Digital -> Analog (điều chế, gửi đi).",
        "DEModulator: Analog -> Digital (giải điều chế, nhận về)."
      ]
    },
    {
      "id": 19,
      "question": "In the physical layer, a [___] can have only a limited number of defined values. Although each value can be any number, it is often as simple as 1 and 0.",
      "image": null,
      "options": [
        "A. Analog signals",
        "B. Electromagnetic signals",
        "C. Digital signals",
        "D. Electronic signals"
      ],
      "correctAnswer": "C",
      "explanation": "Lớp vật lý trong mô hình TCP/IP chịu trách nhiệm chuyển đổi các bit thành tín hiệu điện từ để truyền dẫn. <b>Tín hiệu số (Digital signals)</b> là loại tín hiệu có số lượng giá trị xác định giới hạn, thường là 0 và 1, phù hợp với cách dữ liệu được biểu diễn trong máy tính.",
      "difficulty": "easy",
      "topic": "Networking",
      "hints": [
        "Thần chú: Digital = Discrete (Rời rạc) = Hữu hạn giá trị (như 0 và 1).",
        "Đối lập: Analog = Continuous (Liên tục) = Vô số giá trị.",
        "Hãy liên kết '1 and 0' với 'Digital'."
      ]
    },
    {
      "id": 20,
      "question": "At the transport layer, [___] are used as source and destination addresses to define the application-layer programs.",
      "image": null,
      "options": [
        "A. TCP",
        "B. Port numbers",
        "C. UDP",
        "D. IP address"
      ],
      "correctAnswer": "B",
      "explanation": "Tại lớp truyền tải, để xác định các chương trình ứng dụng (processes) cụ thể trên máy chủ nguồn và đích, cần sử dụng các định danh thứ cấp gọi là <b>số cổng (port numbers)</b>. Các số cổng này xác định các chương trình ở lớp ứng dụng đang giao tiếp.",
      "difficulty": "medium",
      "topic": "Networking",
      "hints": [
        "Thần chú: IP Address = Địa chỉ tòa nhà. Port Number = Số căn hộ.",
        "Tầng Giao vận (Transport Layer) quan tâm đến việc giao tiếp giữa các ứng dụng, do đó nó cần số cổng.",
        "TCP và UDP là các giao thức sử dụng số cổng, không phải bản thân số cổng."
      ]
    },
    {
      "id": 21,
      "question": "[___] is the standard protocol provided by TCP/IP for copying a file from one host to another and transferring files from one system to another seems simple and straightforward.",
      "image": null,
      "options": [
        "A. FTP",
        "B. SMTP",
        "C. URL",
        "D. HTTP"
      ],
      "correctAnswer": "A",
      "explanation": "<b>FTP (File Transfer Protocol)</b> là một trong các dịch vụ truyền thống sử dụng mô hình client-server, được dùng để <b>sao chép tập tin từ một máy chủ này sang máy chủ khác</b> qua Internet.",
      "difficulty": "easy",
      "topic": "Networking",
      "hints": [
        "Thần chú: FTP = File Transfer Protocol. Cứ thấy 'file transfer' là nghĩ đến FTP.",
        "Phân biệt rõ: HTTP cho web, SMTP cho mail, FTP cho file.",
        "URL là một địa chỉ, không phải là một giao thức."
      ]
    },
    {
      "id": 22,
      "question": "In [___] paradigm, the service provider is an application program. It runs continuously, waiting for another application program, then to make a connection through the Internet and ask for service.",
      "image": null,
      "options": [
        "A. P2P",
        "B. Traditional",
        "C. Client-server",
        "D. Model"
      ],
      "correctAnswer": "C",
      "explanation": "Trong mô hình <b>Client-Server</b>, nhà cung cấp dịch vụ (server) là một chương trình ứng dụng chạy liên tục, chờ đợi các chương trình ứng dụng khác (client) thiết lập kết nối qua Internet và yêu cầu dịch vụ. Các dịch vụ như World Wide Web (WWW) với HTTP, FTP, email đều sử dụng mô hình này.",
      "difficulty": "easy",
      "topic": "Networking",
      "hints": [
        "Thần chú: Client-Server = Một bên Yêu cầu (Client), một bên Phục vụ (Server).",
        "Từ khóa: 'service provider' và 'ask for service' là dấu hiệu rõ ràng của mô hình Client-Server.",
        "Mô hình đối lập là P2P (Ngang hàng), nơi mọi người đều 'bình đẳng'."
      ]
    },
    {
      "id": 23,
      "question": "The major design goals of an operating system include: (Choose 4 answers)",
      "image": null,
      "options": [
        "A. Efficient use of hardware and easy use of resources",
        "B. Control subsystems and manage memory",
        "C. Access I/O device and CPU",
        "D. Provide UI",
        "E. Operation on data",
        "F. Text editor"
      ],
      "correctAnswer": "A,B,C,D",
      "explanation": "Hai mục tiêu thiết kế chính của một hệ điều hành là <b>sử dụng phần cứng hiệu quả</b> và <b>dễ dàng sử dụng các tài nguyên</b>. Để đạt được các mục tiêu này, hệ điều hành bao gồm các thành phần quản lý chính như: Giao diện người dùng (UI), Quản lý bộ nhớ, Quản lý tiến trình (CPU), và Quản lý thiết bị (I/O). Các tùy chọn A, B, C, D đều phản ánh các mục tiêu và chức năng cốt lõi này.",
      "difficulty": "medium",
      "topic": "Operating Systems",
      "hints": [
        "HĐH có 2 vai trò: làm ông chủ (quản lý phần cứng) và làm người giúp việc (cung cấp giao diện).",
        "Hãy nghĩ về 4 'nhà quản lý' chính của HĐH: quản lý bộ nhớ, tiến trình (CPU), thiết bị (I/O), và file.",
        "Loại trừ những thứ là 'ứng dụng' (như Text Editor) chứ không phải 'chức năng hệ thống'."
      ]
    },
    {
      "id": 24,
      "question": "A program may need files located in different parts of the world. Networking and internetworking have created a new dimension in operating systems that is:",
      "image": null,
      "options": [
        "A. Personal systems",
        "B. Distributed systems",
        "C. Parallel systems",
        "D. Real-time systems"
      ],
      "correctAnswer": "B",
      "explanation": "Với sự phát triển của mạng và Internet, <b>hệ thống phân tán (Distributed systems)</b> đã trở nên quan trọng. Những hệ thống này cho phép các công việc được chia sẻ giữa nhiều máy tính kết nối qua mạng, ngay cả khi chúng cách xa hàng ngàn dặm.",
      "difficulty": "easy",
      "topic": "Operating Systems",
      "hints": [
        "Thần chú: Distributed = Geographically Dispersed (Phân tán về mặt địa lý).",
        "Hãy liên kết 'networking', 'internet', 'different parts of the world' với 'Distributed'.",
        "Phân biệt rõ: Parallel (nhiều CPU, 1 máy) vs. Distributed (nhiều máy, nối mạng)."
      ]
    },
    {
      "id": 25,
      "question": "Which technique is used in multiprogramming that needs to be determined size beforehand by the memory manager and with each program occupying a contiguous space?",
      "image": null,
      "options": [
        "A. Partitioning",
        "B. Paging",
        "C. Demand paging",
        "D. Demand segmentation"
      ],
      "correctAnswer": "A",
      "explanation": "Trong kỹ thuật <b>phân vùng (Partitioning)</b> của multiprogramming, bộ nhớ được chia thành các phân vùng. Mỗi chương trình chiếm một không gian liên tục và kích thước của nó cần được xác định trước bởi bộ quản lý bộ nhớ. Các kỹ thuật như Paging hoặc Segmentation thì cho phép chương trình chiếm các vị trí bộ nhớ không liên tục.",
      "difficulty": "medium",
      "topic": "Operating Systems",
      "hints": [
        "Thần chú: Partitioning = Contiguous (Liền kề). Giống như chia một cái bánh thành từng miếng lớn.",
        "Từ khóa 'contiguous space' là dấu hiệu rõ ràng nhất của Partitioning.",
        "Paging và Segmentation là các kỹ thuật 'phi liền kề' (non-contiguous)."
      ]
    },
    {
      "id": 26,
      "question": "[___] can occur if a process has too many resource restrictions.",
      "image": null,
      "options": [
        "A. Starvation",
        "B. Synchronization",
        "C. Paging",
        "D. Deadlock"
      ],
      "correctAnswer": "A",
      "explanation": "Trong quản lý tiến trình, <b>thiếu tài nguyên (starvation)</b> xảy ra khi một tiến trình không bao giờ nhận được quyền truy cập vào tài nguyên vì các tiến trình khác liên tục được ưu tiên hơn nó. Điều này làm cho tiến trình bị trì hoãn vô thời hạn.",
      "difficulty": "medium",
      "topic": "Operating Systems",
      "hints": [
        "Thần chú: Deadlock = Vòng lặp chờ đợi (A chờ B, B chờ A).",
        "Thần chú: Starvation = Bị lãng quên (Không bao giờ đến lượt).",
        "Quá nhiều 'ràng buộc' hoặc 'độ ưu tiên thấp' thường dẫn đến Starvation."
      ]
    },
    {
      "id": 27,
      "question": "The device manager will be tracking every device constantly to ensure that the device is [___].",
      "image": null,
      "options": [
        "A. Ready",
        "B. Finished",
        "C. Functioning properly",
        "D. Running"
      ],
      "correctAnswer": "C",
      "explanation": "Trình quản lý thiết bị (Device Manager) chịu trách nhiệm theo dõi mọi thiết bị đầu vào/đầu ra liên tục để đảm bảo rằng thiết bị đó <b>đang hoạt động bình thường (functioning properly)</b>.",
      "difficulty": "easy",
      "topic": "Operating Systems",
      "hints": [
        "Device Manager giống như một người 'giám sát viên' của tất cả các thiết bị phần cứng.",
        "Nhiệm vụ chính của giám sát viên là kiểm tra xem mọi thứ có 'chạy tốt' hay không.",
        "Cụm từ 'functioning properly' là mục tiêu bao quát nhất của việc theo dõi."
      ]
    },
    {
      "id": 28,
      "question": "The construct [___] uses a set of actions one after another.",
      "image": null,
      "options": [
        "A. Sequence",
        "B. Decision",
        "C. Repetition",
        "D. Flow"
      ],
      "correctAnswer": "A",
      "explanation": "Trong ba cấu trúc cơ bản của thuật toán, cấu trúc <b>trình tự (sequence)</b> là một loạt các hành động được thực hiện <b>liên tiếp, hết hành động này đến hành động khác</b>.",
      "difficulty": "easy",
      "topic": "Algorithms",
      "hints": [
        "Thần chú: Sequence = Tuần tự (làm từ A đến B đến C).",
        "Đối lập: Decision (Lựa chọn) và Repetition (Lặp lại).",
        "Đây là cấu trúc mặc định của một chương trình máy tính."
      ]
    },
    {
      "id": 29,
      "question": "[___] hides all the details of an algorithm in an attempt to give the 'big picture' and to show how the algorithm flows from beginning to end.",
      "image": null,
      "options": [
        "A. Pseudocode",
        "B. Unified Modeling Language (UML)",
        "C. Flowchart",
        "D. State diagram"
      ],
      "correctAnswer": "B",
      "explanation": "<b>Ngôn ngữ Mô hình Hợp nhất (UML)</b> là một cách biểu diễn thuật toán và hệ thống bằng hình ảnh. Nó giúp che giấu tất cả các chi tiết để cung cấp một cái nhìn tổng thể ('big picture') và thể hiện luồng hoạt động từ đầu đến cuối.",
      "difficulty": "medium",
      "topic": "Software Engineering",
      "hints": [
        "Thần chú: UML = Big Picture (Bức tranh tổng thể).",
        "Từ khóa 'hides all the details' và 'big picture' là dấu hiệu mạnh nhất của UML.",
        "Pseudocode và Flowchart thường tập trung vào chi tiết của một thuật toán cụ thể."
      ]
    },
    {
      "id": 30,
      "question": "[___] is a basic algorithm that arranges data according to its value.",
      "image": null,
      "options": [
        "A. Inquiry",
        "B. Sorting",
        "C. Searching",
        "D. Recursion"
      ],
      "correctAnswer": "B",
      "explanation": "<b>Sắp xếp (Sorting)</b> là một trong những thuật toán phổ biến nhất trong khoa học máy tính, là quá trình sắp xếp dữ liệu theo giá trị của nó (ví dụ: tăng dần hoặc giảm dần).",
      "difficulty": "easy",
      "topic": "Algorithms",
      "hints": [
        "Thần chú: Sorting = Sắp xếp (sắp đặt theo thứ tự).",
        "Đối lập: Searching = Tìm kiếm (tìm một thứ gì đó).",
        "Hãy liên kết 'arrange' (sắp xếp) với 'Sorting'."
      ]
    },
    {
      "id": 31,
      "question": "In [___] sort, the smallest item moves to the beginning of the unsorted list. There is no one-to-one swapping.",
      "image": null,
      "options": [
        "A. Selection",
        "B. Bubble",
        "C. Insertion"
      ],
      "correctAnswer": "A",
      "explanation": "Trong thuật toán <b>sắp xếp chọn lọc (Selection Sort)</b>, danh sách được chia thành hai phần. Thuật toán tìm phần tử nhỏ nhất từ phần chưa sắp xếp và hoán đổi nó với phần tử ở đầu phần chưa sắp xếp. Quá trình này chỉ có một lần hoán đổi mỗi vòng lặp.",
      "difficulty": "medium",
      "topic": "Algorithms",
      "hints": [
        "Thần chú: Selection Sort = SELECT the smallest (chọn ra thằng nhỏ nhất) rồi đưa về đầu.",
        "Bubble Sort thì đổi chỗ liên tục với hàng xóm.",
        "Selection Sort rất 'kén chọn', chỉ đổi chỗ một lần duy nhất sau khi đã tìm ra phần tử nhỏ nhất trong một lượt."
      ]
    },
    {
      "id": 32,
      "question": "[___] refers to the process of translating each line of the source program into the corresponding line of the object program and executing the line.",
      "image": null,
      "options": [
        "A. Object program",
        "B. Source program",
        "C. Translation",
        "D. Interpretation"
      ],
      "correctAnswer": "D",
      "explanation": "<b>Thông dịch (Interpretation)</b> là quá trình dịch từng dòng của chương trình nguồn sang dòng tương ứng của chương trình đối tượng và thực thi dòng đó ngay lập tức, thay vì dịch toàn bộ mã nguồn trước khi thực thi như biên dịch.",
      "difficulty": "easy",
      "topic": "Programming Languages",
      "hints": [
        "Thần chú: Interpreter = Dịch và chạy từng dòng (line-by-line).",
        "Đối lập: Compiler = Dịch cả cục (dịch toàn bộ rồi mới chạy).",
        "Các ngôn ngữ như Python, JavaScript là ví dụ điển hình của ngôn ngữ thông dịch."
      ]
    },
    {
      "id": 33,
      "question": "[___] uses the principle of logical reasoning to answer queries. It is based on formal logic defined by Greek mathematicians and later developed into first-order predicate calculus.",
      "image": null,
      "options": [
        "A. Procedural paradigm",
        "B. Functional paradigm",
        "C. Declarative paradigm",
        "D. Object-oriented paradigm"
      ],
      "correctAnswer": "C",
      "explanation": "Mô hình <b>lập trình khai báo (Declarative paradigm)</b> sử dụng nguyên tắc suy luận logic để trả lời các truy vấn. Nó dựa trên logic hình thức và tập trung vào việc mô tả 'cái gì cần làm' thay vì 'làm như thế nào'.",
      "difficulty": "hard",
      "topic": "Programming Paradigms",
      "hints": [
        "Thần chú: Declarative = Logic-based (dựa trên logic).",
        "Procedural & OOP: Bạn ra lệnh cho máy tính làm thế nào.",
        "Declarative: Bạn mô tả vấn đề và các quy tắc, máy tính tự tìm cách giải quyết."
      ]
    },
    {
      "id": 34,
      "question": "What is the language of the procedural paradigm that is a high-level language and also has some low-level instructions?",
      "image": null,
      "options": [
        "A. COBOL",
        "B. C",
        "C. Pascal",
        "D. Ada"
      ],
      "correctAnswer": "B",
      "explanation": "Ngôn ngữ <b>C</b> được coi là một ngôn ngữ bậc trung. Nó có cấu trúc của một ngôn ngữ bậc cao nhưng cũng cung cấp khả năng thao tác gần với phần cứng (thông qua con trỏ và quản lý bộ nhớ trực tiếp), cho phép nó thực hiện các tác vụ thường liên quan đến ngôn ngữ cấp thấp.",
      "difficulty": "medium",
      "topic": "Programming Languages",
      "hints": [
        "Thần chú: Ngôn ngữ C = Middle-level language (ngôn ngữ bậc trung).",
        "Hãy liên kết ngôn ngữ C với 'con trỏ' (pointers) - công cụ truy cập bộ nhớ bậc thấp.",
        "C là ngôn ngữ dùng để viết hệ điều hành và trình điều khiển thiết bị."
      ]
    },
    {
      "id": 35,
      "question": "What is the statement that stores the value in the variable, which has already been created in the declaration section?",
      "image": null,
      "options": [
        "A. Compound statement",
        "B. Assignment statement",
        "C. Control statement"
      ],
      "correctAnswer": "B",
      "explanation": "Việc lưu trữ một giá trị vào một biến đã được tạo là chức năng cơ bản của một <b>câu lệnh gán (assignment statement)</b> trong lập trình. Ví dụ: `x = 10;`.",
      "difficulty": "easy",
      "topic": "Programming Fundamentals",
      "hints": [
        "Thần chú: Assignment = Gán giá trị (thường dùng dấu '=').",
        "Phân biệt: Khai báo là 'tạo ra', gán là 'đặt giá trị vào'.",
        "Ví dụ: `int age;` (khai báo), `age = 25;` (gán)."
      ]
    },
    {
      "id": 36,
      "question": "What is [___] model, a process of software development where requirements are divided into multiple standalone modules of the software development cycle?",
      "image": null,
      "options": [
        "A. Waterfall model",
        "B. Incremental model",
        "C. Development process",
        "D. Software engineering"
      ],
      "correctAnswer": "B",
      "explanation": "Trong <b>mô hình gia tăng (Incremental Model)</b>, phần mềm được phát triển theo từng bước hoặc từng giai đoạn. Yêu cầu được chia thành các module độc lập, và một phiên bản cơ bản của hệ thống được tạo ra trước, sau đó các chức năng bổ sung được thêm vào dần dần.",
      "difficulty": "easy",
      "topic": "Software Engineering",
      "hints": [
        "Thần chú: Incremental = Gia tăng (làm từng phần rồi ghép lại).",
        "Đối lập: Waterfall = Thác nước (làm tuần tự từ đầu đến cuối).",
        "Hãy liên kết 'chia thành module' với 'Incremental'."
      ]
    },
    {
      "id": 37,
      "question": "One phase in system development is [___].",
      "image": null,
      "options": [
        "A. Analysis",
        "B. Application",
        "C. Designing",
        "D. Collecting"
      ],
      "correctAnswer": "A",
      "explanation": "Quá trình phát triển phần mềm tuân theo một vòng đời với bốn giai đoạn chính: <b>phân tích (analysis)</b>, thiết kế (design), triển khai (implementation) và kiểm thử (testing). 'Analysis' là một trong những giai đoạn cốt lõi này.",
      "difficulty": "easy",
      "topic": "Software Engineering",
      "hints": [
        "Ghi nhớ 4 giai đoạn cốt lõi: Analysis -> Design -> Implementation -> Testing.",
        "Analysis là bước đầu tiên: 'Tìm hiểu xem chúng ta cần làm gì?'.",
        "Application là sản phẩm, không phải giai đoạn."
      ]
    },
    {
      "id": 38,
      "question": "[___] is a measure of how tightly two modules are bound to each other.",
      "image": null,
      "options": [
        "A. Modularity",
        "B. Coupling",
        "C. Interoperability",
        "D. Cohesion"
      ],
      "correctAnswer": "B",
      "explanation": "Trong thiết kế phần mềm, <b>ghép nối (coupling)</b> là khái niệm chỉ <b>mức độ phụ thuộc giữa các mô-đun</b> trong hệ thống. Mức độ ghép nối thấp thường được ưa chuộng vì nó làm cho các mô-đun độc lập hơn và dễ bảo trì hơn.",
      "difficulty": "medium",
      "topic": "Software Engineering",
      "hints": [
        "Thần chú: Coupling = Sự phụ thuộc GIỮA các module (không tốt).",
        "Đối lập: Cohesion = Sự liên quan BÊN TRONG một module (tốt).",
        "Mục tiêu thiết kế tốt: LOW Coupling, HIGH Cohesion."
      ]
    },
    {
      "id": 39,
      "question": "[___] refers to the ability to move data and/or a system from one platform to another and to reuse code.",
      "image": null,
      "options": [
        "A. Maintainability",
        "B. Operability",
        "C. Correctability",
        "D. Transferability"
      ],
      "correctAnswer": "D",
      "explanation": "<b>Tính khả chuyển (Transferability)</b> đề cập đến khả năng di chuyển dữ liệu và/hoặc một hệ thống từ một nền tảng này sang nền tảng khác, cũng như khả năng <b>tái sử dụng mã (reuse code)</b>.",
      "difficulty": "medium",
      "topic": "Software Engineering",
      "hints": [
        "Thần chú: Transferability = Transfer = Di chuyển (giữa các nền tảng).",
        "Tính khả chuyển bao gồm cả khả năng tương thích đa nền tảng (portability) và tái sử dụng (reusability).",
        "Phân biệt với Maintainability (khả năng sửa chữa, bảo trì)."
      ]
    },
    {
      "id": 40,
      "question": "What is the method in black-box testing where tests are designed to include representatives of boundary values in a range?",
      "image": null,
      "options": [
        "A. Boundary-value testing",
        "B. Random testing",
        "C. Exhaustive testing",
        "D. Data flow testing"
      ],
      "correctAnswer": "A",
      "explanation": "<b>Kiểm thử giá trị biên (Boundary-value testing)</b> là một phương pháp kiểm thử hộp đen (black-box testing) tập trung vào việc tạo các trường hợp kiểm thử cho các giá trị ở ranh giới của miền đầu vào. Các lỗi thường xảy ra khi hệ thống xử lý các giá trị biên.",
      "difficulty": "easy",
      "topic": "Software Engineering",
      "hints": [
        "Thần chú: Lỗi hay xảy ra ở biên giới (boundary).",
        "Nếu một hệ thống cho phép số từ 1-100, hãy kiểm tra các số 0, 1, 2 và 99, 100, 101.",
        "Đây là kỹ thuật giúp tìm ra nhiều lỗi nhất với ít ca kiểm thử nhất."
      ]
    },
    {
      "id": 41,
      "question": "To search for elements, we can use [___] on sorted arrays that can help to decrease time complexity.",
      "image": null,
      "options": [
        "A. Sequential search",
        "B. Insertion sort",
        "C. Selection sort",
        "D. Binary search"
      ],
      "correctAnswer": "D",
      "explanation": "<b>Tìm kiếm nhị phân (Binary search)</b> là một thuật toán tìm kiếm hiệu quả được sử dụng trên các danh sách hoặc mảng <b>đã được sắp xếp</b>. Nó hoạt động bằng cách liên tục chia đôi khoảng tìm kiếm, giúp giảm đáng kể độ phức tạp thời gian so với tìm kiếm tuần tự.",
      "difficulty": "easy",
      "topic": "Algorithms",
      "hints": [
        "Thần chú: Sorted Array + Search = Binary Search.",
        "Binary Search giống như trò chơi đoán số, bạn luôn đoán ở giữa để loại bỏ một nửa các khả năng.",
        "Sort là sắp xếp, Search là tìm kiếm. Đừng nhầm lẫn!"
      ]
    },
    {
      "id": 42,
      "question": "Each element in a record is called [___].",
      "image": null,
      "options": [
        "A. A variable",
        "B. An index",
        "C. A field",
        "D. A node"
      ],
      "correctAnswer": "C",
      "explanation": "Một bản ghi (record) là một tập hợp các phần tử liên quan. Mỗi phần tử trong một bản ghi được gọi là một <b>trường (field)</b>.",
      "difficulty": "easy",
      "topic": "Data Structures",
      "hints": [
        "Thần chú: Record = Hồ sơ, Field = Mục thông tin trong hồ sơ.",
        "Ví dụ: Record = SinhVien, Fields = MaSV, HoTen, NgaySinh.",
        "Trong CSDL, Record tương ứng với một Hàng, Field tương ứng với một Cột."
      ]
    },
    {
      "id": 43,
      "question": "The name of a linked list is the name of the head pointer that points to the [___] of the list.",
      "image": null,
      "options": [
        "A. First node",
        "B. Second node",
        "C. Null node",
        "D. Last node"
      ],
      "correctAnswer": "A",
      "explanation": "Trong danh sách liên kết (linked list), con trỏ đầu (head pointer) lưu địa chỉ của phần tử đầu tiên. Tên của danh sách chính là tên của biến con trỏ này, vì nó trỏ đến <b>nút đầu tiên (first node)</b> của danh sách.",
      "difficulty": "easy",
      "topic": "Data Structures",
      "hints": [
        "Thần chú: Head = First Node (Đầu thì trỏ đến cái đầu tiên).",
        "Mất Head Pointer là mất cả danh sách liên kết, vì không biết bắt đầu từ đâu.",
        "Node cuối cùng sẽ trỏ đến NULL, không phải Head."
      ]
    },
    {
      "id": 44,
      "question": "A stack is a [___] structure.",
      "image": null,
      "options": [
        "A. FIFO",
        "B. LIFO",
        "C. DIFO",
        "D. SIFO"
      ],
      "correctAnswer": "B",
      "explanation": "Một ngăn xếp (stack) là một danh sách tuyến tính bị giới hạn, nơi tất cả các thao tác thêm và xóa dữ liệu đều được thực hiện từ một đầu duy nhất là đỉnh (top). Do đó, dữ liệu được thêm vào sau cùng sẽ được lấy ra đầu tiên, tuân theo nguyên tắc <b>Vào sau, ra trước (Last-In, First-Out - LIFO)</b>.",
      "difficulty": "easy",
      "topic": "Data Structures",
      "hints": [
        "Câu thần chú: Stack = LIFO (Last-In, First-Out).",
        "Hãy nhớ đến hình ảnh một 'chồng đĩa'.",
        "Đối lập với Stack là Queue (FIFO - Vào trước, ra trước)."
      ]
    },
    {
      "id": 45,
      "question": "A binary search tree (BST) is a binary tree with one extra property: the key value of root is [___] values of all nodes in each left subtree.",
      "image": null,
      "options": [
        "A. Greater than",
        "B. Less than",
        "C. Equal"
      ],
      "correctAnswer": "A",
      "explanation": "Một cây tìm kiếm nhị phân (Binary Search Tree - BST) có một tính chất đặc biệt: giá trị khóa của mỗi nút (bao gồm cả nút gốc) <b>lớn hơn</b> giá trị khóa của tất cả các nút trong cây con bên trái của nó, và nhỏ hơn giá trị của tất cả các nút trong cây con bên phải của nó.",
      "difficulty": "medium",
      "topic": "Data Structures",
      "hints": [
        "Thần chú: BST = (Trái < Gốc < Phải).",
        "Tất cả những gì 'bé hơn' thì đi sang trái, tất cả những gì 'lớn hơn' thì đi sang phải.",
        "Câu hỏi đang so sánh Gốc với Trái, vậy Gốc phải LỚN HƠN."
      ]
    },
    {
      "id": 46,
      "question": "A(n) [___] list is also known as a queue.",
      "image": null,
      "options": [
        "A. LIFO",
        "B. FIFO",
        "C. Unordered",
        "D. Ordered"
      ],
      "correctAnswer": "B",
      "explanation": "Một hàng đợi (queue) là một danh sách tuyến tính trong đó dữ liệu chỉ có thể được thêm vào ở cuối (rear) và xóa khỏi đầu (front). Điều này đảm bảo rằng dữ liệu được xử lý theo thứ tự nó được nhận vào, tức là tuân theo nguyên tắc <b>Vào trước, ra trước (First-In, First-Out - FIFO)</b>.",
      "difficulty": "easy",
      "topic": "Data Structures",
      "hints": [
        "Câu thần chú: Queue = FIFO (First-In, First-Out).",
        "Hãy nhớ đến hình ảnh một 'hàng người xếp hàng'.",
        "Đối lập với Queue là Stack (LIFO - Vào sau, ra trước)."
      ]
    },
    {
      "id": 47,
      "question": "If personal information about each employee in a company is stored in a file, we can use [___] to retrieve each record at the end of the month to print the paychecks.",
      "image": null,
      "options": [
        "A. Hashed file",
        "B. Sequential file",
        "C. EOF",
        "D. Index file"
      ],
      "correctAnswer": "B",
      "explanation": "Trong tình huống cần xử lý lần lượt tất cả các bản ghi (ví dụ: in bảng lương cho tất cả nhân viên), <b>tệp tuần tự (sequential file)</b> là phù hợp vì các bản ghi trong đó chỉ có thể được truy cập lần lượt, từ đầu đến cuối.",
      "difficulty": "medium",
      "topic": "File Systems",
      "hints": [
        "Thần chú: Xử lý TẤT CẢ bản ghi lần lượt -> Dùng Sequential File.",
        "Đối lập: Tìm kiếm MỘT bản ghi cụ thể -> Dùng Indexed/Hashed File.",
        "In phiếu lương cho cả công ty là một tác vụ xử lý hàng loạt điển hình."
      ]
    },
    {
      "id": 48,
      "question": "If the transaction file key is 20 and the first master file key is 25, then we [___].",
      "image": null,
      "options": [
        "A. Add the new record to the new master file",
        "B. Revise the contents of the old master file",
        "C. Delete the data",
        "D. Write the old master file record to the new master file"
      ],
      "correctAnswer": "A",
      "explanation": "Trong thuật toán cập nhật file tuần tự, nếu khóa của tệp giao dịch (20) nhỏ hơn khóa của tệp chính (25), điều đó có nghĩa là bản ghi giao dịch là một bản ghi mới cần được chèn vào. Do đó, ta sẽ <b>thêm (add) bản ghi giao dịch này vào tệp chính mới</b>.",
      "difficulty": "hard",
      "topic": "File Systems",
      "hints": [
        "Thần chú: Transaction Key < Master Key => Add new record.",
        "Khóa giao dịch nhỏ hơn, nghĩa là nó là bản ghi mới cần được chèn vào trước bản ghi chính hiện tại.",
        "Thuật toán này luôn tạo ra một file master MỚI, không sửa trực tiếp file cũ."
      ]
    },
    {
      "id": 49,
      "question": "The [___] is the highest level in the file system hierarchy. This does not have a parent directory.",
      "image": null,
      "options": [
        "A. Root directory",
        "B. Home directory",
        "C. Working directory",
        "D. Parent directory"
      ],
      "correctAnswer": "A",
      "explanation": "Trong hệ thống phân cấp tệp, <b>thư mục gốc (root directory)</b> là cấp cao nhất và là thư mục duy nhất không có thư mục cha. Nó là điểm khởi đầu cho tất cả các thư mục và tệp khác trong hệ thống.",
      "difficulty": "easy",
      "topic": "Operating Systems",
      "hints": [
        "Thần chú: Root = Gốc rễ, là điểm bắt đầu của mọi thứ.",
        "Thư mục gốc là thư mục duy nhất không có thư mục cha (không có '..').",
        "Trên Linux/macOS, đó là dấu '/'. Trên Windows, đó là `C:\\`, `D:\\`."
      ]
    },
    {
      "id": 50,
      "question": "A [___] is a collection of related logically coherent data used by the application programs in an organization.",
      "image": null,
      "options": [
        "A. Database",
        "B. File",
        "C. Directory",
        "D. Flat-file"
      ],
      "correctAnswer": "A",
      "explanation": "<b>Cơ sở dữ liệu (Database)</b> được định nghĩa là một tập hợp các dữ liệu có liên quan với nhau, được tổ chức một cách logic và được sử dụng bởi các chương trình ứng dụng trong một tổ chức.",
      "difficulty": "easy",
      "topic": "Database Concepts",
      "hints": [
        "Thần chú: Database = Dữ liệu có cấu trúc + có liên quan.",
        "Từ khóa 'logically coherent' và 'related' là dấu hiệu của một Database.",
        "Hãy nghĩ đến sự khác biệt giữa các file Excel rời rạc (Files) và một hệ thống quản lý tích hợp (Database)."
      ]
    },
    {
      "id": 51,
      "question": "In the relational database model, data is organized in [___] called relations.",
      "image": null,
      "options": [
        "A. Two-dimensional array",
        "B. Two-dimensional tables",
        "C. Two-dimensional record"
      ],
      "correctAnswer": "B",
      "explanation": "Trong <b>mô hình cơ sở dữ liệu quan hệ (relational database model)</b>, dữ liệu được tổ chức dưới dạng các <b>bảng hai chiều (two-dimensional tables)</b>, được gọi là các quan hệ (relations).",
      "difficulty": "easy",
      "topic": "Database Concepts",
      "hints": [
        "Thần chú: Relational Database = Bảng (Table).",
        "Hãy hình dung một CSDL quan hệ như một tập hợp các file Excel, mỗi file là một bảng.",
        "Bảng = Quan hệ, Hàng = Bộ (Tuple), Cột = Thuộc tính (Attribute)."
      ]
    },
    {
      "id": 52,
      "question": "[___] is needed to allow any relation in the database to be represented, to allow a language like SQL to use powerful retrieval operations composed of atomic operations, to remove anomalies in insertion, deletion, and updating, and reduce the need for restructuring the database as new data types are added.",
      "image": null,
      "options": [
        "A. Relational database",
        "B. Database system",
        "C. Atomic operations",
        "D. Normalization"
      ],
      "correctAnswer": "D",
      "explanation": "<b>Chuẩn hóa (Normalization)</b> là quá trình chuyển đổi một tập hợp các quan hệ sang một tập hợp các quan hệ mới với cấu trúc vững chắc hơn. Quá trình này cần thiết để <b>loại bỏ các bất thường (anomalies) trong việc chèn, xóa và cập nhật</b> dữ liệu, giảm thiểu sự dư thừa và tăng tính toàn vẹn dữ liệu.",
      "difficulty": "medium",
      "topic": "Database Concepts",
      "hints": [
        "Thần chú: Normalization = Loại bỏ Dị thường (Anomalies) + Giảm dư thừa.",
        "Hãy liên kết các từ khóa 'anomalies', 'insertion', 'deletion', 'updating' với Normalization.",
        "Chuẩn hóa giúp cho CSDL trở nên 'sạch sẽ' và 'vững chắc' hơn."
      ]
    },
    {
      "id": 53,
      "question": "The [___] operation always results in a relation that has exactly one more row than the original.",
      "image": null,
      "options": [
        "A. Insert",
        "B. Delete",
        "C. Update",
        "D. Select"
      ],
      "correctAnswer": "A",
      "explanation": "Thao tác <b>chèn (insert)</b> trong cơ sở dữ liệu quan hệ là một thao tác một ngôi (unary operation) áp dụng cho một quan hệ duy nhất. Thao tác này <b>chèn một bộ giá trị (tuple)</b> mới vào quan hệ, do đó làm tăng số hàng lên đúng một.",
      "difficulty": "easy",
      "topic": "Database Concepts",
      "hints": [
        "INSERT -> Thêm hàng -> Số hàng tăng.",
        "DELETE -> Xóa hàng -> Số hàng giảm.",
        "UPDATE -> Sửa hàng -> Số hàng không đổi.",
        "SELECT -> Đọc hàng -> Số hàng không đổi."
      ]
    },
    {
      "id": 54,
      "question": "[___] is the process by which a given set of relations are transformed to a new set of relations with a more solid structure.",
      "image": null,
      "options": [
        "A. Relational database",
        "B. Database system",
        "C. Atomic operations",
        "D. Normalization"
      ],
      "correctAnswer": "D",
      "explanation": "<b>Chuẩn hóa (Normalization)</b> là quá trình chuyển đổi một tập hợp các quan hệ (bảng) sang một tập hợp các quan hệ mới với cấu trúc vững chắc hơn, nhằm giảm dư thừa và cải thiện tính toàn vẹn dữ liệu.",
      "difficulty": "easy",
      "topic": "Database Concepts",
      "hints": [
        "Thần chú: Normalization = Cải thiện cấu trúc bảng (relations).",
        "Từ khóa 'transformed to a new set of relations' và 'more solid structure' là dấu hiệu của Normalization.",
        "Đây là câu hỏi lặp lại, củng cố kiến thức về chuẩn hóa."
      ]
    },
    {
      "id": 55,
      "question": "In the [___] attacks, threats to the confidentiality are based on monitoring online traffic, from which they can obtain other types of information.",
      "image": null,
      "options": [
        "A. Snooping",
        "B. Repudiation",
        "C. Denial of service",
        "D. Traffic analysis"
      ],
      "correctAnswer": "D",
      "explanation": "<b>Phân tích lưu lượng (traffic analysis)</b> là một hình thức tấn công vào tính bảo mật (confidentiality) thông qua việc <b>giám sát lưu lượng truy cập trực tuyến</b> để thu thập thông tin gián tiếp (siêu dữ liệu), chẳng hạn như tần suất hoặc kích thước của các gói tin, từ đó suy ra thông tin nhạy cảm.",
      "difficulty": "medium",
      "topic": "Cybersecurity",
      "hints": [
        "Snooping = Đọc trộm 'nội dung' bức thư.",
        "Traffic Analysis = Phân tích 'phong bì' của bức thư (ai gửi, ai nhận, khi nào...).",
        "Tấn công này nguy hiểm ngay cả khi nội dung đã được mã hóa."
      ]
    },
    {
      "id": 56,
      "question": "Before transmission, the sender transforms the plaintext into the ciphertext—this is [___].",
      "image": null,
      "options": [
        "A. Plain text",
        "B. Cipher text",
        "C. Encryption",
        "D. Decryption"
      ],
      "correctAnswer": "C",
      "explanation": "<b>Mã hóa (Encryption)</b> là quá trình biến đổi thông tin ban đầu (plaintext) thành một dạng không thể đọc được (ciphertext) nhằm bảo vệ thông tin khỏi sự truy cập trái phép trước khi truyền tải.",
      "difficulty": "easy",
      "topic": "Cybersecurity",
      "hints": [
        "Thần chú: Encryption = En-code = Mã hóa (làm cho nó khó đọc).",
        "Đối lập: Decryption = De-code = Giải mã (làm cho nó đọc được).",
        "Encryption là việc của người gửi, Decryption là việc của người nhận."
      ]
    },
    {
      "id": 57,
      "question": "The [___] of ethics says that an act is ethical if it brings about a useful result for society.",
      "image": null,
      "options": [
        "A. Moral rules",
        "B. Social contract",
        "C. Utilitarianism",
        "D. Nonmaleficence"
      ],
      "correctAnswer": "C",
      "explanation": "Nguyên tắc đạo đức <b>Utilitarianism (Chủ nghĩa công lợi)</b>, liên quan đến hậu quả của hành động. Một hành động được coi là đạo đức nếu nó mang lại <b>kết quả hữu ích cho xã hội</b> hoặc cho số đông người nhất.",
      "difficulty": "hard",
      "topic": "Computer Ethics",
      "hints": [
        "Thần chú: Utilitarianism = Utility = Useful result (Kết quả hữu dụng cho số đông).",
        "Học thuyết này tập trung vào 'kết quả' của hành động.",
        "Đối lập với nó là Deontology, tập trung vào 'bản chất' của hành động."
      ]
    },
    {
      "id": 58,
      "question": "[___] are the 'bad guys.' They are the types of hackers who break into computer networks with purely negative motives such as monetary gain or reputation.",
      "image": null,
      "options": [
        "A. Black Hat Hacker",
        "B. Grey Hat Hacker",
        "C. Red Hat Hacker",
        "D. Blue Hat Hacker"
      ],
      "correctAnswer": "A",
      "explanation": "<b>Hacker Mũ Đen (Black Hat Hacker)</b> được định nghĩa là 'những kẻ xấu' trong thế giới hacker. Họ là những loại hacker xâm nhập vào mạng máy tính với các động cơ hoàn toàn tiêu cực như <b>kiếm tiền bất chính hoặc vì danh tiếng xấu</b>.",
      "difficulty": "easy",
      "topic": "Cybersecurity",
      "hints": [
        "Thần chú: Black Hat = Bad Guy (Kẻ xấu).",
        "Đối lập: White Hat = Good Guy / Ethical Hacker (Người tốt / Hacker đạo đức).",
        "Grey Hat = Nửa tốt nửa xấu."
      ]
    },
    {
      "id": 59,
      "question": "[___] does not substitute one symbol for another; instead, it changes the location of the symbols.",
      "image": null,
      "options": [
        "A. Monoalphabetic cipher",
        "B. Substitution cipher",
        "C. Polyalphabetic cipher",
        "D. Transposition cipher"
      ],
      "correctAnswer": "D",
      "explanation": "Một <b>mật mã hoán vị (transposition cipher)</b> hoạt động bằng cách thay đổi vị trí của các ký hiệu trong thông điệp gốc, thay vì thay thế một ký hiệu bằng một ký hiệu khác (như trong mật mã thay thế - substitution cipher).",
      "difficulty": "medium",
      "topic": "Cybersecurity",
      "hints": [
        "Thần chú: Substitution = Substitute = Thay thế (thay chữ).",
        "Thần chú: Transposition = Transport = Vận chuyển (đổi chỗ).",
        "Hãy liên kết 'changes the location' với 'Transposition'."
      ]
    },
    {
      "id": 60,
      "question": "In [___] cryptography, everyone has access to everyone's public key.",
      "image": null,
      "options": [
        "A. Symmetric-key",
        "B. Asymmetric-key",
        "C. Secret-key",
        "D. Private-key"
      ],
      "correctAnswer": "B",
      "explanation": "Trong <b>mật mã khóa bất đối xứng (Asymmetric-key cryptography)</b>, hay còn gọi là mật mã khóa công khai, mỗi người có một cặp khóa: một khóa công khai (public key) và một khóa riêng (private key). <b>Khóa công khai có thể được truy cập bởi bất kỳ ai</b>, trong khi khóa riêng được giữ bí mật.",
      "difficulty": "easy",
      "topic": "Cybersecurity",
      "hints": [
        "Thần chú: Symmetric = Same key (Cùng một khóa bí mật).",
        "Thần chú: Asymmetric = Public + Private keys (Cặp khóa Công khai + Riêng tư).",
        "Hãy tưởng tượng Public Key như địa chỉ hòm thư của bạn, còn Private Key là chìa khóa của hòm thư đó."
      ]
    }
  ]
}